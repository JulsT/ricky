{"version":3,"sources":["Friend.js","SortButtons.js","InputSearch.js","api.js","App.js","serviceWorker.js","index.js"],"names":["Friend","props","Info","styled","div","_templateObject","Photo","img","_templateObject2","Name","h3","_templateObject3","Text","p","_templateObject4","name","picture","gender","age","city","phone","react_default","a","createElement","src","alt","Button","button","SortButtons_templateObject","SortButtons","_ref","handleSort","onClick","ev","id","target","console","log","Fragment","type","SearchInput","input","InputSearch_templateObject","InputSearch","handleSearch","placeholder","onChange","value","toLowerCase","getFriendList","Object","asyncToGenerator","regenerator_default","mark","_callee","data","result","wrap","_context","prev","next","fetch","sent","json","abrupt","results","stop","apply","this","arguments","Wrapper","App_templateObject","SideMenuList","form","App_templateObject2","FriendContainer","App_templateObject3","Reset","App_templateObject4","App","state","list","searchName","_this","setState","sortFriends","_ref2","resetAll","myFormRef","reset","getFormRef","el","_this$state","toConsumableArray","filter","friends","first","includes","sort","b","dob","ref","src_InputSearch","src_SortButtons","map","src_Friend","assign","key","cell","toUpperCase","large","location","Component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.33902e4e.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nconst Friend = (props) => {\r\n\r\n    const Info = styled.div`\r\n    width: 160px;\r\n    height: 300px;\r\n    padding: 10px;\r\n    margin-right: 10px;\r\n    margin-bottom: 10px; \r\n    background-color: rgb(248, 238, 226);\r\n    border-radius: 25px;\r\n    flex-wrap: wrap;\r\n  `;\r\n\r\n    const Photo = styled.img`\r\n    display:block;\r\n    margin-left: auto;\r\n    margin-right: auto\r\n  `;\r\n\r\n    const Name = styled.h3`\r\n    text-align: center;\r\n    font - size: 14px;\r\n    color: #099389;\r\n    text-transform: uppercase;\r\n    border-bottom: 1px dashed  #03D8E3\r\n    `;\r\n\r\n    const Text = styled.p`\r\n    text-align: center;\r\n    font-size: 12px;\r\n    color: #4a5353;\r\n    text-transform: uppercase\r\n  `;\r\n\r\n    const { name, picture, gender, age, city, phone } = props;\r\n    return (\r\n        <Info >\r\n            <Photo src={picture} alt=\"friend ava\" />\r\n            <Name>\r\n                {name}\r\n            </Name>\r\n            <Text>\r\n                {gender}\r\n            </Text>\r\n            <Text>\r\n                I am {age} years old\r\n            </Text>\r\n            <Text>\r\n                I live in {city}\r\n            </Text>\r\n            <Text>\r\n                Call me: {phone}\r\n            </Text>\r\n        </Info>\r\n    );\r\n}\r\n\r\nexport default Friend\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nconst Button = styled.button`\r\n    box-sizing: border-box;\r\n    min-width: 150px;\r\n    display: block;\r\n    text-align: center;\r\n    line-height: 24px;\r\n    padding: 15px 0;\r\n    margin-bottom: 20px;\r\n    font-size: 14px;\r\n    color: #7DF1E8;\r\n    text-transform: uppercase;\r\n    background-color:#099389;\r\n    border-radius: 20px;\r\n    white-space: pre-wrap;\r\n    :hover {\r\n    background-color:#3AAAA1; \r\n    }\r\n`;\r\n// const ResetButton = styled.button`\r\n//     box-sizing: border-box;\r\n//     min-width: 150px;\r\n//     display: block;\r\n//     text-align: center;\r\n//     line-height: 24px;\r\n//     padding: 15px 0;\r\n//     margin-bottom: 20px;\r\n//     font-weight:bold;\r\n//     color:rgb(248, 238, 226);\r\n//     text-transform: uppercase;\r\n//     background-color:#1f635c;\r\n//     border-radius: 20px;\r\n//     :hover {\r\n//     background-color:#3AAAA1; \r\n//     }\r\n// `;\r\nconst SortButtons = ({ handleSort }) => {\r\n    const onClick = (ev) => {\r\n        const id = ev.target.id;\r\n        console.log(id)\r\n        handleSort({ id });\r\n    }\r\n    return (\r\n        <>\r\n            <Button onClick={onClick} id=\"sortNameUp\" type=\"button\">\r\n                Sort by name {'\\n'}\r\n                A &#8658; Z\r\n            </Button>\r\n            <Button onClick={onClick} id=\"sortNameDown\" type=\"button\">\r\n                Sort by name {'\\n'}\r\n                Z &#8658; A\r\n            </Button>\r\n            <Button onClick={onClick} id=\"sortAgeUp\" type=\"button\">\r\n                Sort by age  &#8657;\r\n            </Button>\r\n            <Button onClick={onClick} id=\"sortAgeDown\" type=\"button\">\r\n                Sort by age   &#8659;\r\n            </Button>\r\n            {/* <ResetButton onClick={onClick} id=\"reset\" type=\"button\">\r\n                Reset filters\r\n            </ResetButton> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SortButtons\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SearchInput = styled.input`\r\n    box-sizing: border-box;\r\n    width: 150px;\r\n    display: block;\r\n    text-align: center;\r\n    line-height: 24px;\r\n    padding: 15px 0;\r\n    margin-bottom: 20px;\r\n    color: #099389;\r\n    text-transform: uppercase;\r\n    background-color:#abfaf3;\r\n    border-radius: 20px;\r\n`;\r\n\r\nconst InputSearch = ({ handleSearch }) => {\r\n    const onChange = (ev) => {\r\n        const name = ev.target.value.toLowerCase();\r\n        console.log(name)\r\n        handleSearch({ name });\r\n    }\r\n    return (\r\n        <SearchInput placeholder=\"Search by name\" type=\"search\" onChange={onChange} />\r\n    );\r\n}\r\nexport default InputSearch\r\n","export const getFriendList = async () => {\r\n    const data = await fetch('https://randomuser.me/api/?results=15');\r\n    const result = await data.json();\r\n    return result.results;\r\n\r\n}\r\n","import React, { Component } from 'react';\nimport Friend from './Friend';\nimport SortButtons from './SortButtons';\n\nimport InputSearch from './InputSearch';\nimport { getFriendList } from './api';\nimport './App.css';\nimport styled from 'styled-components';\n// import ResetButton from './ResetButton';\n\nconst Wrapper = styled.div`\n  display: flex;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  background-image: linear-gradient(#03D8E3, #58FAAF);\n`;\nconst SideMenuList = styled.form`\n  flex-grow:1;\n  flex-basis: 20%;\n  padding:20px;\n`;\nconst FriendContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    flex-grow: 2;\n    flex-basis: 80%;\n`;\nconst Reset = styled.button`\n box-sizing: border-box;\n min-width: 150px;\n display: block;\n text-align: center;\n line-height: 24px;\npadding: 15px 0;\n margin-bottom: 20px;\n font-weight:bold;\ncolor:rgb(248, 238, 226);\n text-transform: uppercase;\nbackground-color:#1f635c;\n border-radius: 20px;\n :hover {\n background-color:#3AAAA1; \n }\n `;\nclass App extends Component {\n  state = {\n    list: [],\n    name: '',\n    id: '',\n    result: [],\n\n  }\n  async componentDidMount() {\n    const list = await getFriendList();\n    this.setState({ list });\n    console.log(list);\n  }\n  searchName = ({ name }) => {\n    this.setState({ name })\n  }\n  sortFriends = ({ id }) => {\n    this.setState({ id });\n  }\n\n  resetAll = () => {\n\n    this.myFormRef.reset();\n    this.setState({ name: '', id:''  });\n\n    console.log(this.state)\n\n  }\n\n  getFormRef = (el) => {\n    this.myFormRef = el;\n  }\n  render() {\n    const { list, id, name } = this.state;\n    let result = [...list];\n\n    if (name) {\n      result = list.filter(friends =>\n        friends.name.first.includes(name));\n    }\n\n    if (id) {\n      switch (id) {\n        case 'sortNameUp':\n        console.log(\"sorted\", this.state.list)\n          result.sort((a, b) =>\n            ((a.name.first > b.name.first) - (a.name.first < b.name.first)));\n          break;\n        case 'sortNameDown':\n        console.log(\"sorted\", this.state.list)\n          result.sort((a, b) =>\n            ((b.name.first > a.name.first) - (b.name.first < a.name.first)));\n          break;\n\n        case 'sortAgeUp':\n        console.log(\"sorted\", this.state.list)\n          result.sort((a, b) =>\n            a.dob.age - b.dob.age);\n          break;\n\n        case 'sortAgeDown':\n          // result = list;\n          // this.resetAll();\n          console.log(\"sorted\", this.state.list)\n          result.sort((a, b) =>\n            b.dob.age - a.dob.age);\n          break;\n\n      }\n    }\n\n    return (\n      <Wrapper>\n        <SideMenuList ref={this.getFormRef}>\n          <InputSearch handleSearch={this.searchName} />\n          <SortButtons handleSort={this.sortFriends} />\n          <Reset onClick={this.resetAll} type=\"button\"> Reset</Reset>\n        </SideMenuList>\n        <FriendContainer>\n          {result.map(friends => (\n            <Friend\n              key={friends.cell}\n              {...friends}\n              name={friends.name.first.toUpperCase()}\n              picture={friends.picture.large}\n              gender={friends.gender}\n              age={friends.dob.age}\n              city={friends.location.city}\n              phone={friends.phone}\n            />))}\n        </FriendContainer>\n      </Wrapper>\n    );\n  }\n}\n\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}